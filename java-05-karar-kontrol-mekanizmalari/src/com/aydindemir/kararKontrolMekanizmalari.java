package com.aydindemir;

public class kararKontrolMekanizmalari {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
//		1. if â€“ else
//
//			En temel karar yapÄ±sÄ±dÄ±r. KoÅŸul true ise ilgili blok Ã§alÄ±ÅŸÄ±r.
//
//			int x = 10;
//			if (x > 0) {
//			    System.out.println("Pozitif");
//			} else if (x < 0) {
//			    System.out.println("Negatif");
//			} else {
//			    System.out.println("SÄ±fÄ±r");
//			}
//
//			ğŸ”¹ 2. switch â€“ case
//
//			Bir deÄŸiÅŸkenin deÄŸerine gÃ¶re farklÄ± bloklarÄ± Ã§alÄ±ÅŸtÄ±rÄ±r.
//
//			int day = 3;
//			switch (day) {
//			    case 1: System.out.println("Pazartesi"); break;
//			    case 2: System.out.println("SalÄ±"); break;
//			    case 3: System.out.println("Ã‡arÅŸamba"); break;
//			    default: System.out.println("GeÃ§ersiz gÃ¼n");
//			}
//
//
//			Not: Java 7â€™den itibaren String ile, Java 14â€™ten itibaren switch expressions ile daha geliÅŸmiÅŸ kullanÄ±m mÃ¼mkÃ¼ndÃ¼r.
//
//			ğŸ”¹ 3. Ternary (?:) operatÃ¶rÃ¼
//
//			KÄ±sa if-else yazÄ±mÄ±dÄ±r.
//
//			int age = 20;
//			String result = (age >= 18) ? "YetiÅŸkin" : "Ã‡ocuk";
//			System.out.println(result);
//
//			ğŸ”¹ 4. DÃ¶ngÃ¼lerdeki kontrol mekanizmalarÄ±
//
//			Bunlar da karar mekanizmasÄ± olarak kabul edilir Ã§Ã¼nkÃ¼ akÄ±ÅŸÄ± deÄŸiÅŸtirir:
//
//			break â†’ DÃ¶ngÃ¼yÃ¼ tamamen sonlandÄ±rÄ±r.
//
//			continue â†’ O anki iterasyonu atlar, sonraki iterasyona geÃ§er.
//
//			return â†’ Metottan Ã§Ä±kar.
//
//			for (int i = 0; i < 5; i++) {
//			    if (i == 3) break;       // dÃ¶ngÃ¼yÃ¼ keser
//			    if (i == 1) continue;    // sadece bu turu atlar
//			    System.out.println(i);
//			}
//
//			ğŸ“Œ Ã–zet
//
//			Javaâ€™daki karar ve kontrol mekanizmalarÄ± ÅŸunlardÄ±r:
//
//			if â€“ else if â€“ else
//
//			switch â€“ case â€“ default
//
//			Ternary operatÃ¶rÃ¼ ?:
//
//			DÃ¶ngÃ¼ kontrolÃ¼ iÃ§in: break, continue, return

	}

}
