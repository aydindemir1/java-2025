package com.aydindemir;

public class Diziler {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
//		1. Dizi Nedir?
//
//				AynÄ± tÃ¼rden birden fazla veriyi tek bir isim altÄ±nda saklamaya yarar.
//
//				Bellekte sabit uzunluklu bir yapÄ±dÄ±r (oluÅŸturulduÄŸunda boyutu belirlenir, sonradan deÄŸiÅŸmez).
//
//				ğŸ“Œ 2. Dizi TanÄ±mlama
//				int[] numbers;       // int tipinde dizi tanÄ±mlama
//				String[] names;      // String tipinde dizi tanÄ±mlama
//
//				ğŸ“Œ 3. Dizi OluÅŸturma
//				int[] numbers = new int[5];   // 5 elemanlÄ± int dizisi (baÅŸlangÄ±Ã§ta hepsi 0)
//
//
//				ğŸ‘‰ Javaâ€™da diziler default deÄŸerlerle doldurulur:
//
//				int, byte, short, long â†’ 0
//
//				double, float â†’ 0.0
//
//				boolean â†’ false
//
//				char â†’ '\u0000' (boÅŸ karakter)
//
//				referans tipler (String, Object) â†’ null
//
//				ğŸ“Œ 4. Diziye DeÄŸer Atama
//				numbers[0] = 10;   // ilk eleman
//				numbers[1] = 20;   // ikinci eleman
//
//				ğŸ“Œ 5. Diziyi BaÅŸlangÄ±Ã§ta Doldurma
//				int[] numbers = {10, 20, 30, 40, 50};
//				String[] colors = {"Red", "Green", "Blue"};
//
//				ğŸ“Œ 6. Diziden Veri Okuma
//				System.out.println(numbers[0]);  // 10
//				System.out.println(colors[2]);   // Blue
//
//				ğŸ“Œ 7. Dizi UzunluÄŸu
//				System.out.println(numbers.length);  // 5
//
//				ğŸ“Œ 8. Dizi Ãœzerinde DÃ¶ngÃ¼
//				int[] numbers = {1, 2, 3, 4, 5};
//
//				// klasik for
//				for (int i = 0; i < numbers.length; i++) {
//				    System.out.println(numbers[i]);
//				}
//
//				// for-each (geliÅŸtirilmiÅŸ for)
//				for (int num : numbers) {
//				    System.out.println(num);
//				}
//
//				ğŸ“Œ 9. Ã‡ok Boyutlu Diziler
//				int[][] matrix = {
//				    {1, 2, 3},
//				    {4, 5, 6},
//				    {7, 8, 9}
//				};
//
//				System.out.println(matrix[1][2]);  // 6
//
//
//				âœ… Ã–zet
//
//				Dizi = sabit uzunluklu, aynÄ± tipten elemanlarÄ± tutan yapÄ±.
//
//				[] kullanÄ±larak eriÅŸilir.
//
//				length ile boyut Ã¶ÄŸrenilir.
//
//				DÃ¶ngÃ¼lerle iÅŸlenir.

	}

}
